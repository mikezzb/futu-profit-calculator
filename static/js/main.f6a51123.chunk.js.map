{"version":3,"sources":["constants/commissions.js","helpers/calculate.js","components/organisms/Calculator.js","pages/Home.js","App.js","reportWebVitals.js","index.js"],"names":["FUTU_US_TRANSACTION_FEES","Object","freeze","COMMISSION","PLATFORM","CLEARING","FUTU_US_MIN_FEES","FUTU_US_BUY","PER_SHARE","MIN_FEES","FUTU_US_SALE","TRADING_ACTIVITY","PER_AMOUNT","SEC","getFee","fees","price","numOfShares","total","keys","forEach","key","Math","max","calculate","market","buyPrice","sellPrice","buyCommission","sellCommission","profit","percentageChange","columns","field","headerName","width","type","CalculatorRow","label","children","className","Calculator","useReducer","state","action","form","dispatchForm","Paper","elevation","RadioGroup","row","aria-label","name","value","onChange","e","target","FormControlLabel","control","Radio","Input","startAdornment","InputAdornment","position","Button","variant","color","rows","result","id","Date","now","commission","generateResult","pageSize","Home","AppBar","Toolbar","IconButton","edge","Typography","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f6a51123.chunk.js","sourcesContent":["const FUTU_US_TRANSACTION_FEES = Object.freeze({\n  COMMISSION: 0.0049,\n  PLATFORM: 0.005,\n  CLEARING: 0.003,\n});\n\nconst FUTU_US_MIN_FEES = Object.freeze({\n  COMMISSION: 0.99,\n  PLATFORM: 1,\n});\n\nconst FUTU_US_BUY = Object.freeze({\n  PER_SHARE: FUTU_US_TRANSACTION_FEES,\n  MIN_FEES: FUTU_US_MIN_FEES,\n});\n\nconst FUTU_US_SALE = Object.freeze({\n  PER_SHARE: {\n    ...FUTU_US_TRANSACTION_FEES,\n    TRADING_ACTIVITY: 0.000119,\n  },\n  PER_AMOUNT: {\n    SEC: 0.0000051,\n  },\n  MIN_FEES: {\n    ...FUTU_US_MIN_FEES,\n    TRADING_ACTIVITY: 0.01,\n    SEC: 0.01,\n  },\n});\n\nexport {\n  FUTU_US_BUY,\n  FUTU_US_SALE\n};\n","import { FUTU_US_BUY, FUTU_US_SALE } from '../constants/commissions';\n\nconst getFee = (fees, price, numOfShares) => {\n  let total = 0;\n  // For Per Share Fees\n  Object.keys(fees.PER_SHARE).forEach(key => {\n    total += Math.max(fees.PER_SHARE[key] * numOfShares, (key in fees.MIN_FEES ? fees.MIN_FEES[key] : 0));\n  });\n  // For Per Amount Fees\n  if ('PER_AMOUNT' in fees) {\n    Object.keys(fees.PER_AMOUNT).forEach(key => {\n      total += Math.max(fees.PER_AMOUNT[key] * numOfShares * price, (key in fees.MIN_FEES ? fees.MIN_FEES[key] : 0));\n    });\n  }\n  return total;\n};\n\nconst calculate = ({\n  market,\n  numOfShares,\n  buyPrice,\n  sellPrice,\n}) => {\n  if (market === 'US') {\n    const buyCommission = getFee(FUTU_US_BUY, buyPrice, numOfShares);\n    const sellCommission = getFee(FUTU_US_SALE, sellPrice, numOfShares);\n    const commission = buyCommission + sellCommission;\n    const profit = (sellPrice - buyPrice) * numOfShares - commission;\n    const percentageChange = (sellPrice - buyPrice) / buyPrice;\n    return {\n      profit,\n      buyCommission,\n      sellCommission,\n      percentageChange,\n    };\n  }\n  return {};\n};\n\nexport default calculate;\n","import React, { useReducer, useState, useEffect } from 'react';\nimport {\n  Paper, RadioGroup, FormControl, FormControlLabel, FormLabel,\n  Radio, TextField, InputAdornment, Input, InputLabel, Button,\n  Table, TableBody, TableCell, TableContainer, TableHead, TableRow\n} from '@material-ui/core';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { MdLocationOn } from 'react-icons/md';\n\nimport calculate from '../../helpers/calculate';\nimport './Calculator.css';\n\nconst columns = [\n  { field: 'id', headerName: 'ID', width: 100 },\n  {\n    field: 'profit', headerName: 'Profit ($)', width: 120, type: 'number',\n  },\n  {\n    field: 'percentageChange', headerName: 'Gain (%)', width: 120,\n  },\n  {\n    field: 'buyPrice', headerName: 'Buy ($)', width: 100, type: 'number',\n  },\n  {\n    field: 'sellPrice', headerName: 'Sell ($)', width: 100, type: 'number',\n  },\n  {\n    field: 'commission', headerName: 'Commission ($)', width: 160, type: 'number',\n  },\n];\n\nconst CalculatorRow = ({ label, children }) =>\n  <div className=\"calculator-row\">\n    <div className=\"calculator-row-label\">{`${label}:`}</div>\n    {children}\n  </div>;\n\nconst Calculator = () => {\n  const [form, dispatchForm] = useReducer(\n    (state, action) => ({ ...state, ...action }),\n    {\n      market: 'US',\n      numOfShares: 100,\n      buyPrice: 15,\n      sellPrice: 15,\n    }\n  );\n\n  const generateResult = () => {\n    const result = calculate(form);\n    return {\n      id: Date.now(),\n      profit: result.profit,\n      percentageChange: result.percentageChange,\n      buyPrice: form.buyPrice,\n      sellPrice: form.sellPrice,\n      commission: result.buyCommission + result.sellCommission,\n    };\n  };\n\n  return (\n    <div>\n      <Paper className=\"calculator-card\" elevation={1}>\n        <CalculatorRow label=\"Market\">\n          <RadioGroup row aria-label=\"market\" name=\"market\" value={form.market} onChange={e => dispatchForm({ market: e.target.value })}>\n            <FormControlLabel value=\"US\" control={<Radio />} label=\"US\" />\n            <FormControlLabel value=\"HK\" control={<Radio />} label=\"HK\" />\n          </RadioGroup>\n        </CalculatorRow>\n        <CalculatorRow label=\"Number of Shares\">\n          <Input\n            value={form.numOfShares}\n            onChange={e => dispatchForm({ numOfShares: e.target.value })}\n            startAdornment={<InputAdornment position=\"start\">N</InputAdornment>}\n          />\n        </CalculatorRow>\n        <CalculatorRow label=\"Buy\">\n          <Input\n            value={form.buyPrice}\n            onChange={e => dispatchForm({ buyPrice: e.target.value })}\n            startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\n          />\n        </CalculatorRow>\n        <CalculatorRow label=\"Sell\">\n          <Input\n            value={form.sellPrice}\n            onChange={e => dispatchForm({ sellPrice: e.target.value })}\n            startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\n          />\n        </CalculatorRow>\n        <div className=\"calculator-btn\">\n          <Button variant=\"contained\" color=\"primary\" elevation={2}>Record</Button>\n        </div>\n      </Paper>\n      <Paper className=\"profit-table-container\" elevation={1}>\n        <div className=\"profit-table\">\n          <DataGrid\n            rows={[\n              generateResult(),\n            ]}\n            columns={columns}\n            pageSize={5}\n          />\n        </div>\n      </Paper>\n    </div>\n  );\n};\n\nexport default Calculator;\n","import React from 'react';\nimport {\n  AppBar, Toolbar, IconButton, Typography, Button\n} from '@material-ui/core';\nimport { AiOutlineMenu } from 'react-icons/ai';\n\nimport Calculator from '../components/organisms/Calculator';\nimport './Home.css';\n\nconst Home = () => (\n  <div className=\"home\">\n    <AppBar className=\"header\">\n      <Toolbar>\n        <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\n          <AiOutlineMenu />\n        </IconButton>\n        <Typography variant=\"h6\">\n          Leek\n        </Typography>\n      </Toolbar>\n    </AppBar>\n    <Calculator />\n  </div>\n);\n\nexport default Home;\n","import Home from './pages/Home';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport calculate from './helpers/calculate';\n\nconst result = calculate({\n  market: 'US',\n  numOfShares: 65,\n  buyPrice: 15.17,\n  sellPrice: 15.6,\n});\n\nconsole.log(result);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}